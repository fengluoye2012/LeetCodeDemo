package com.leetcode.demo.java.designmode;

/**
 * 设计模式：http://c.biancheng.net/view/1322.html
 * 设置模式七大原则：
 * 1、开闭原则（对拓展开放、对修改关闭）
 * 2、里氏替换原则(子类可以重写父类的方法，不能改变父类原有的功能，只要子类出现的地方都可以替换成父类，可以重写父类的抽象方法，不要重写父类的普通方法，参数比父类范围宽、返回值比父类范围窄)
 * 3、依赖倒置原则（高层模块依赖底层和抽象，底层和抽象不依赖高层模块，面向接口编程）
 * 4、单一职责原则（一个类、对象尽量只做一件事）
 * 5、迪米特原则（最少知道原则 只和朋友打招呼）
 * 6、接口隔离原则（一个接口只做一件事）
 * 7、合成复用原则（组合/聚合复用原则，优先使用组合、聚合关联关系，其次使用继承关系）
 *
 * 设计模式：创建型 行为型
 * 单例模式：
 * 工厂模式：
 * 创建者（Builder）模式：
 *
 * 适配器模式：
 * 观察者模式：
 * 迭代器模式：
 * 代理模式：
 * 门面模式：
 * 命令模式：
 * 策略模式：
 *
 * - 桥接模式:对于多维因素影响类的稳定性，使用组合的方式来实现；如有颜色的包：影响因素有颜色和包的种类；使用继承方式实现类太多；
 * - 访问者模式：
 */
public class DesignMode {
}
